@page "/register"
@inject IUserManagmentService UserManagmentService
@inject NavigationManager NavigationManager
@inject IAlertService AlertService
@inject ILocalStorageService LocalStorageService
<UnloggedNav></UnloggedNav>
<div class="container-fluid p-5">
    <div class="d-flex justify-content-center row">
        <div class="col-xl-6">
            <div class="card">
                <h4 class="card-header pt-3">Rejestarcja</h4>
                <div class="card-body pb-3">
                    <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                        <DataAnnotationsValidator />
                        <p>Dane osobowe: </p>
                        <hr>
                        <div class="form-group">
                            <label>Imię</label>
                            <InputText @bind-Value="model.Name" class="form-control" />
                            <ValidationMessage For="@(() => model.Name)" />
                        </div>
                        <div class="form-group">
                            <label>Nazwisko</label>
                            <InputText @bind-Value="model.Secondname" class="form-control" />
                            <ValidationMessage For="@(() => model.Secondname)" />
                        </div>
                        <div class="form-group">
                            <label>Narodowość</label>
                            <InputText @bind-Value="model.Nationality" class="form-control" />
                            <ValidationMessage For="@(() => model.Nationality)" />
                        </div>
                        <div class="form-group">
                            <label>Miejsce urodzenia</label>
                            <InputText @bind-Value="model.PlaceOfBirth" class="form-control" />
                            <ValidationMessage For="@(() => model.PlaceOfBirth)" />
                        </div>
                        <div class="form-group">
                            <label>Data urodzenia</label>
                            <InputDate @bind-Value="model.DateOfBirth" class="form-control" />
                            <ValidationMessage For="@(() => model.DateOfBirth)" />
                        </div>
                        <div class="form-group">
                            <label>PESEL</label>
                            <InputText @bind-Value="model.PIN" class="form-control" />
                            <ValidationMessage For="@(() => model.PIN)" />
                        </div>
                        <div class="form-group">
                            <label>Numer telefonu</label>
                            <InputText @bind-Value="model.PhoneNumber" class="form-control" />
                            <ValidationMessage For="@(() => model.PhoneNumber)" />
                        </div>
                        <div class="form-group">
                            <label>E-mail</label>
                            <InputText @bind-Value="model.Email" class="form-control" />
                            <ValidationMessage For="@(() => model.Email)" />
                        </div>
                        <div class="form-group">
                            <label>Numer dokumentu tożsamości</label>
                            <InputText @bind-Value="model.IdentityDocumentNumber" class="form-control" />
                            <ValidationMessage For="@(() => model.IdentityDocumentNumber)" />
                        </div>
                        <div class="form-group">
                            <label>Data ważności dokumentu tożsamości</label>
                            <InputDate @bind-Value="model.IdentityDocumentExpirationDate" class="form-control" />
                            <ValidationMessage For="@(() => model.IdentityDocumentExpirationDate)" />
                        </div>
                        <hr>
                        <p>Adres: </p>
                        <hr>
                        <div class="form-group">
                            <label>Kraj</label>
                            <InputText @bind-Value="address.Country" class="form-control" />
                            <ValidationMessage For="@(() => address.Country)" />
                        </div>
                        <div class="form-group">
                            <label>Miasto</label>
                            <InputText @bind-Value="address.City" class="form-control" />
                            <ValidationMessage For="@(() => address.City)" />
                        </div>
                        <div class="form-group">
                            <label>Ulica</label>
                            <InputText @bind-Value="address.Street" class="form-control" />
                            <ValidationMessage For="@(() => address.Street)" />
                        </div>
                        <div class="form-group">
                            <label>Nr domu</label>
                            <InputText @bind-Value="address.UnitNumber" class="form-control" />
                            <ValidationMessage For="@(() => address.UnitNumber)" />
                        </div>
                        <div class="form-group">
                            <label>Kod pocztowy</label>
                            <InputText @bind-Value="address.PostCode" class="form-control" />
                            <ValidationMessage For="@(() => address.PostCode)" />
                        </div>
                        <hr>
                        <p>Dane logowania: </p>
                        <hr>
                        <div class="form-group">
                            <label>Login</label>
                            <InputText @bind-Value="model.Login" class="form-control" />
                            <ValidationMessage For="@(() => model.Login)" />
                        </div>
                        <div class="form-group">
                            <label>Hasło</label>
                            <InputText @bind-Value="model.Password" type="password" class="form-control" />
                            <ValidationMessage For="@(() => model.Password)" />
                        </div>
                        <button disabled="@loading" class="btn btn-primary">
                            @if (loading)
                            {
                                <span class="spinner-border spinner-border-sm mr-1"></span>
                            }
                            Zarejestruj
                        </button>
                    </EditForm>
                </div>
            </div>

        </div>
    </div>
</div>
@code {
    // private Models.RegisterModel model = new Models.RegisterModel();
    private UserModel model = new UserModel();
    private AddressModel address = new AddressModel();
    private bool loading;

    protected override async void OnInitialized()
    {
        if (await LocalStorageService.GetItem<Models.StorageUserModel>("user") != null)
        {
            await UserManagmentService.Logout();
        }
    }

    private async void OnValidSubmit()
    {

        // reset alerts on submit
        AlertService.Clear();
        loading = true;
        try
        {
            model.Address = address;
            await UserManagmentService.Register(model);
            AlertService.Success("Pomyślnie zarejestrowano!");
            await Task.Delay(500);
            NavigationManager.NavigateTo("login");

        }
        catch (Exception ex)
        {
            AlertService.Error("Nie udało się zarejestrować!");
            loading = false;
            StateHasChanged();
        }

    }
}

